datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Product {
  category      Category[]
  createdAt     DateTime       @default(now())
  descriptionEn String?
  descriptionRs String?
  descriptionRu String?
  id            String         @id @default(cuid())
  isActive      Boolean?
  orders        Order[]
  price         Float?
  productImages ProductImage[]
  promotions    Promotion[]
  sku           String?
  sliders       Slider[]
  titleEn       String?
  titleRs       String?
  titleRu       String?
  updatedAt     DateTime       @updatedAt
}

model Category {
  createdAt     DateTime   @default(now())
  descriptionEn String?
  descriptionRs String?
  descriptionRu String?
  id            String     @id @default(cuid())
  parent        String?
  products      Product[]
  promotion     Promotion? @relation(fields: [promotionId], references: [id])
  promotionId   String?
  sliders       Slider[]
  titleEn       String?
  titleRs       String?
  titleRu       String?
  updatedAt     DateTime   @updatedAt
}

model ProductImage {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  imageUrl  String?
  product   Product? @relation(fields: [productId], references: [id])
  productId String?
  updatedAt DateTime @updatedAt
}

model Slider {
  category   Category?           @relation(fields: [categoryId], references: [id])
  categoryId String?
  createdAt  DateTime            @default(now())
  id         String              @id @default(cuid())
  imageUrl   String?
  linkType   EnumSliderLinkType?
  product    Product?            @relation(fields: [productId], references: [id])
  productId  String?
  subtitleEn String?
  subtitleRs String?
  subtitleRu String?
  titleEn    String?
  titleRs    String?
  titleRu    String?
  updatedAt  DateTime            @updatedAt
  videoUrl   String?
}

model Order {
  createdAt DateTime         @default(now())
  id        String           @id @default(cuid())
  product   Product?         @relation(fields: [productId], references: [id])
  productId String?
  status    EnumOrderStatus?
  updatedAt DateTime         @updatedAt
  user      User?            @relation(fields: [userId], references: [id])
  userId    String?
}

model Promotion {
  categories      Category[]
  createdAt       DateTime   @default(now())
  discountPercent Float?
  id              String     @id @default(cuid())
  products        Product[]
  updatedAt       DateTime   @updatedAt
  user            User?      @relation(fields: [userId], references: [id])
  userId          String?
}

model User {
  contact    String?
  cookieId   String?
  createdAt  DateTime    @default(now())
  email      String?     @unique
  firstName  String?
  id         String      @id @default(cuid())
  lastName   String?
  orders     Order[]
  password   String
  promotions Promotion[]
  roles      Json
  updatedAt  DateTime    @updatedAt
  username   String      @unique
}

enum EnumSliderLinkType {
  Product
  Category
  External
}

enum EnumOrderStatus {
  Processing
  New
  Completed
  Cancelled
}
